

plugins {
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish' version '1.2.1'
  id 'idea'
  id "maven-publish"
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5+'
  testImplementation 'org.mockito:mockito-junit-jupiter:3.+'
  testImplementation 'org.assertj:assertj-core:3+'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5+'
}

test {
  useJUnitPlatform()
}


group = 'de.mdguenther.gradle'
version = '0.0.1'

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/maxdavidguenther/java-in-docker")
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
        password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
      }
    }
  }
}

gradlePlugin {
  website = 'https://github.com/maxdavidguenther/java-in-docker'
  vcsUrl = 'https://github.com/maxdavidguenther/java-in-docker.git'
  plugins {
    javaInDocker {
      id = 'de.mdguenther.gradle.java-in-docker'
      displayName = 'Java in Docker'
      description = "Run java in docker container with automatic reloading from Spring Boot Developer " +
        "tools while 'gradle build --continuously' runs in the background."
      tags.set(['docker', 'docker compose', 'Spring Boot', 'continuously'])
      implementationClass = 'de.mdguenther.gradle.javaindocker.JavaInDockerPlugin'
    }
  }
}
